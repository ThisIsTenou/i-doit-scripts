#!/bin/bash

##
## i-doit jobs
##

##
## Copyright (C) 2017 synetics GmbH, <https://i-doit.com/>
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this program. If not, see <http://www.gnu.org/licenses/>.
##

set -euo pipefail
IFS=$'\n\t'

##
## Configuration
##

CONFIGURATION_FILE="/etc/i-doit/i-doit.sh"

##--------------------------------------------------------------------------------------------------

function execute {
    local prefix=""

    test "$(whoami)" != "$APACHE_USER" && prefix="sudo -u $APACHE_USER "

    log "Clear caches"
    eval "${prefix}rm -rf ${INSTANCE_PATH}/temp/*" || abort "Unable to clear caches"

    log "Clear updates"
    eval "${prefix}rm -rf ${INSTANCE_PATH}/updates/versions/*" || abort "Unable to clear updates"

    log "Archive i-doit logbook"
    eval "${prefix}${CONTROLLER_BIN} archivelog" || abort "Handler 'archivelog' failed"
    log ""

    log "Cleanup i-doit rights"
    eval "${prefix}${CONTROLLER_BIN} cleanup_auth" || abort "Handler 'cleanup_auth' failed"
    log ""

    log "Purge unfinished objects"
    eval "${prefix}${CONTROLLER_BIN} cleanup_objects -t 1" || \
        abort "Handler 'cleanup_objects' failed"
    log ""

    log "Truncate search index"
    eval "${prefix}/usr/bin/mysql -u$MARIADB_USERNAME -p$MARIADB_PASSWORD \
        -eTRUNCATE TABLE ${TENANT_DATABASE}.isys_search_idx" || \
        abort "Unable truncate search index"

    log "Re-create search index"
    eval "${prefix}${CONTROLLER_BIN} search_index fullindex" || \
        abort "Handler 'search_index' failed"

    log "Send notifications"
    eval "${prefix}${CONTROLLER_BIN} notifications" || abort "Handler 'notifications' failed"
}

function setup {
    test -f "$CONFIGURATION_FILE" || abort "Missing configuration file '${CONFIGURATION_FILE}'"

    # shellcheck source=/dev/null
    source "$CONFIGURATION_FILE" || abort "Unable to include configuration file"

    test -x "$CONTROLLER_BIN" || abort "Script '${CONTROLLER_BIN}' not found"

    test -d "$INSTANCE_PATH" || abort "No i-doit instance found under '${INSTANCE_PATH}'"
}

function log {
    echo -e "$1"
}

function finish {
    log "Done. Have fun :-)"
    exit 0
}

function abort {
    echo -e "$1"  1>&2
    echo "Operation failed. Please check what is wrong and try again." 1>&2
    exit 1
}

##--------------------------------------------------------------------------------------------------

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
    setup && execute && finish
fi
